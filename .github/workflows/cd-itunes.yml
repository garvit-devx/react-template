name: iTunes CD
on:
  push:
    branches:
      - develop

jobs:
  deploy:
    name: Deploy on S3
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.20.x]

    steps: 
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node version
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn

      - name: Get branch name
        id: vars
        run: echo ::set-output name=branch_name::${GITHUB_REF#refs/*/}

      - name: Set env.ENV_NAME
        run: |
          if [[ ${{ steps.vars.outputs.branch_name}} == 'master' ]]; then
            echo "ENV_NAME=prod" >> ${GITHUB_ENV}
          else
            echo "ENV_NAME=dev" >> ${GITHUB_ENV}
          fi

      - name: Install dependencies
        run: yarn

      - name: Build
        run: yarn build:prod

      - name: Deploy
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --exclude '__tests__'
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'ap-south-1'
          SOURCE_DIR: './build/'

      - name: Invalidate cloudfront
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ secrets.CLOUDFRONT_DISTRIBUTION }}
          PATHS: "/index.html"
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

